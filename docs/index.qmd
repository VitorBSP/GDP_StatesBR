---
title: "Predição do PIB per capita dos Estados Brasileiros"
author: "<br> Alisson Rosa <br> João Inácio <br> Bernardo Silveira"
title-slide-attributes:
  data-background-image: imgs/brasil.jpg
  data-background-opacity: "0.2"
format: 
    revealjs:
        theme: [moon, custom.scss]
        preview-links: auto
        chalkboard: true
        transition: fade
        controls: true
        logo: "imgs/ufsm.png"
        smaller: false
lang: pt
---

## Introdução  {background-image="imgs/states.jpg" background-opacity=0.1}

::: {.incremental}
- Introdução

<br />

- Modelagem

<br />

- Conclusões


:::


## Introdução {background-image="imgs/states.jpg" background-opacity=0.1}

::: {.incremental}

* Predizer o produto interno bruto per capita (**PIB**) dos 26 estados do Brasil 

<br />

* Modelo Estatístico Clássico vs Modelos de Machine Learning
:::

## Introdução {background-image="imgs/states.jpg" background-opacity=0.1}


* Covariáveis utilizadas nos modelos finais:
 * **Pobreza**: Que fornece a taxa de extrema pobreza no ano;
 * **População Total**: Informa o total populacional de cada estado;
 * **Área** : Refere-se a área em km de cada estado no ano de;
 * **Índice de Desenvolvimento Humano Educacional** (IDHe) : Refere-se ao IDH educacional no de ano de 2017



::: footer
Dados Disponíveis no IBGE
:::



## Introdução {background-image="imgs/states.jpg" background-opacity=0.1}



* A escolha das covariáveis foram para conter três eixos:

 * **População e Geográfia do Estado**: Área e População total;
 * **Condição de Vida**: Pobreza;
 * **Educação** : IDHe.

```{python}
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from hyperopt import hp, tpe, fmin, Trials, STATUS_OK
from sklearn.preprocessing import scale, normalize
from sklearn.model_selection import cross_val_score
from sklearn.ensemble import RandomForestRegressor
from sklearn.tree import DecisionTreeRegressor
from sklearn.linear_model import Lasso, Ridge, LinearRegression, ElasticNet
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score, mean_absolute_percentage_error
from lightgbm import LGBMRegressor
from xgboost import XGBRegressor
from sklearn import preprocessing
from utils.functions import *
le = preprocessing.LabelEncoder()
prm={"figure.figsize":(9, 3),
'figure.dpi':150}
plt.rcParams.update(prm)
sns.set_palette("viridis")
sns.set_style("whitegrid")
```

```{python}


base = pd.read_csv("./data/data_modelagem.csv")
base = base.drop(columns=['State', 'Unnamed: 0'])
base = base.rename(columns={'%_de_extremamente_pobres_':"%_ext_pob",'idhm_ajustado_à_desigualdade_':'idhm_desigualdade'})


```





## Medidas Básicas {background-image="imgs/states.jpg" background-opacity=0.1}

```{python}

sns.boxplot(x='Region', y='renda_per_capita_', data=base.iloc[0:27, :]);
```


## Medidas Básicas {background-image="imgs/states.jpg" background-opacity=0.1}

```{python}

sns.PairGrid(data=base.iloc[0:27,:],y_vars=['renda_per_capita_'],x_vars=["%_ext_pob","população_total_"]
,hue='Region',height=3).map(sns.scatterplot).add_legend();
```
## Medidas Básicas {background-image="imgs/states.jpg" background-opacity=0.1}

```{python}
prm={"figure.figsize":(10, 5),
'figure.dpi':150}
sns.barplot(data=base.iloc[0:27,:].sort_values('renda_per_capita_', ascending=False), y='territorialidade', x = 'renda_per_capita_', hue = 'Region', dodge=False);
```


## Medidas Básicas {background-image="imgs/states.jpg" background-opacity=0.1}
```{python}
base.iloc[0:27,:].describe()
```

## Seleção de Covariáveis {background-image="imgs/states.jpg" background-opacity=0.1}

* **SelectKBest**: que demonstra quais das covariáveis estão mais correlacionadas com a variável resposta.

<br> 

* **Correlação** entre as covariáveis, para que evite-se multicolineariedade e covariáveis que expliquem a mesma variação.


## Seleção de Covariáveis {background-image="imgs/states.jpg" background-opacity=0.1}
```{python}
sns.heatmap(base.iloc[0:27, :].corr(), annot=True,cmap='RdYlBu');
```


## Modelos {background-image="imgs/states.jpg" background-opacity=0.1}

::: {.incremental}
* Dados de 2019 como treino

<br>

* Dados de 2020 para ajustes de hiperparâmetros

<br>

* Dados de 2021 para validação final
:::


## Modelos {background-image="imgs/states.jpg" background-opacity=0.1}

::: {.incremental}
* Regressão Linear
* Elastic Net
* Lasso 
* Ridge
* Árvores de Decisão
* Random Forest
* LightGBM
* XGBoost
:::






## Modelos - Métricas de Decisão {background-image="imgs/states.jpg" background-opacity=0.1}

* $R^2$ (R quadrado) 

<br>

* Mean Absolute Error (MAE)

<br> 

* Root Mean Squared Error (RMSE) 

<br>

* Mean Absolute Percentage Error (MAPE).



## Modelos - Métricas de Decisão {background-image="imgs/states.jpg" background-opacity=0.1}

![](imgs/metrics.png){.absolute  left=10 width="960" height="340"}

